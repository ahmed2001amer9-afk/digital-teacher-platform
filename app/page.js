"use client";
import { useState, useEffect } from "react";

export default function Page() {
  const [email, setEmail] = useState("");
  const [lang, setLang] = useState("ar"); // ุงูุงูุชุฑุงุถู ุนุฑุจู

  // ุถุจุท ูุบุฉ ูุงุชุฌุงู ุงูุตูุญุฉ
  useEffect(() => {
    const root = document.documentElement;
    root.setAttribute("lang", lang);
    root.setAttribute("dir", lang === "ar" ? "rtl" : "ltr");
  }, [lang]);

  const dict = {
    ar: {
      brand: "ููุตุฉ ุงููุนููู ุงูุฑููู",
      tagline: "ุฅุชูุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุงูุชุนููู",
      courseTitle: "ุงูุฏูุฑุฉ: ุงุญุชุฑุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุงูุชุนููู",
      courseDesc:
        "ุชุชุถูู ุณุช ูุฑุดุงุช ุนูููุฉ ุชุบุทู ุฃุญุฏุซ ุชุทุจููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุงูุชุนููู.",
      subscribeTitle: "ุงุดุชุฑู ูุชุตูู ุงูุชุญุฏูุซุงุช",
      placeholder: "ุฃุฏุฎู ุจุฑูุฏู ุงูุฅููุชุฑููู",
      subscribe: "ุงุดุชุฑุงู",
      footer: "ููุตุฉ ุงููุนููู ุงูุฑููู",
      workshops: [
        {
          title: "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุงูุตูุฑ ุฅูู ุงูุฅุจุฏุงุน",
          points: [
            "ุชุตููู ุนุฑูุถ PowerPoint ุจุถุบุทุฉ ุฒุฑ",
            "ุฅูุดุงุก ุตูุฑ ุงุญุชุฑุงููุฉ ุจุถุบุทุฉ ุฒุฑ",
            "ุชุญููู ุงููุตูุต ุฅูู ุฃุตูุงุช ูุชููุนุฉ",
            "ุชุฃููู ูุตุฉ ูุชุญููููุง ูููุฏูู",
            "ุงูุชูุงุนู ูุน ููู PDF ูุชุญูููู ููุตุฉ ุฃู ูุณุฑุญูุฉ",
            "ุชุญููู PDF ุฅูู Word ุฏูู ููุฏ ุงูุชูุณูู",
          ],
        },
        {
          title: "ุฃุฏูุงุช ุงูุฃุชูุชุฉ ุงูุชุนููููุฉ ุงูุณุฑูุนุฉ",
          points: [
            "ุชุตููู ููุฏูู ุชุนูููู ูู ุนููุงู ุงูุฏุฑุณ",
            "ุฅูุดุงุก ุงุฎุชุจุงุฑุงุช ุงุญุชุฑุงููุฉ ูุน ูุฑูุฉ ูุฑุงุฌุนุฉ",
            "ุฅูุดุงุก ุงุฎุชุจุงุฑ ููุดุงุฑูุชู ูุชุชุจุน ุงููุชุงุฆุฌ ูู ุฏูููุชูู",
            "ุงูุญูุงุฑ ูุน ููุฏูู YouTube ูุชุญูููู ููุณุฑุญูุฉ",
            "ุชุญููู PDF ุฅูู PowerPoint ุงุญุชุฑุงูู",
          ],
        },
        {
          title: "ุงูุฅุจุฏุงุน ุงููุชูุฏูู ูุฅุซุฑุงุก ุงููุญุชูู ุงูุชุนูููู",
          points: [
            "ุชุญููู ุงูุฏุฑูุณ ูุฎุฑุงุฆุท ุฐูููุฉ",
            "ุชุตููู ููุฏูููุงุช ุฅุนูุงููุฉ ุฃู ุชุนููููุฉ",
            "ุฅูุดุงุก ุฃุณุฆูุฉ ุชูุงุนููุฉ ููุชุนุฉ",
            "ุชุฑุฌูุฉ ุงุญุชุฑุงููุฉ ููููุงุช ูุจูุฑุฉ",
            "ุชุตููู ููุฏูููุงุช ูุชุนุฏุฏุฉ ุงูุดุฎุตูุงุช ุงููุงุทูุฉ",
          ],
        },
        {
          title: "ุงููุนููู ุงูุฐูู ุงููุฎุตุต ูููุงุฏุฉ",
          points: [
            "ุฅูุดุงุก ุจุฑูุงูุฌ ุดุจูู ุจู ChatGPT ูุฎุตุต ูููุงุฏุฉ",
            "ุฅุชุงุญุฉ ุฃุณุฆูุฉ ุงูุทูุงุจ ุญูู ุงููุงุฏุฉ ุนูู ูุฏุงุฑ ุงูุณุงุนุฉ",
            "ุชุฏุฑูุจ ุงููุนูู ูุฌุนู ุงูุจุฑูุงูุฌ ุฐูู ูุฏููู",
            "ุญุตุฑ ุงูุฅุฌุงุจุงุช ูู ูุทุงู ุงููุงุฏุฉ",
            "ุชุฌุฑุจุฉ ุชูุงุนููุฉ ูุฎุตุตุฉ ููุทูุงุจ",
          ],
        },
        {
          title: "ุชุตููู ููุงุฐุฌ ุชุนููููุฉ ุชูุงุนููุฉ ุชุญุงูู ุงููุงูุน",
          points: [
            "ุงูุชุนุฑูู ุจุฃุญุฏุซ ุฃุฏุงุฉ ูุชุตููู ุงูููุงุฐุฌ",
            "ุฅูุดุงุก ุจูุฆุงุช ุชุนููููุฉ ูุญุงููุฉ ูููุงูุน",
            "ุชุถููู ุนูุงุตุฑ ุชูุงุนููุฉ",
            "ุชูุฏูู ูููุฐุฌ ุชุทุจููู ูุงูู",
            "ุชุฎุตูุต ุงูููุงุฐุฌ ูููุถูุนุงุช ูุชุนุฏุฏุฉ",
          ],
        },
        {
          title: "ุชุฌููุน ูุตุงุฏุฑ ุงููุนุฑูุฉ ูุชุญููููุง ุฅูู ุชุฌุงุฑุจ ูุชุนุฏุฏุฉ",
          points: [
            "ุฌูุน ูู ูุตุงุฏุฑ ุงููุนุฑูุฉ ูู ููุงู ูุงุญุฏ",
            "ุชุญููู ุงููุญุชูู ุฅูู ููุฏูู",
            "ุฅูุดุงุก ุจูุฏูุงุณุช ุญูุงุฑู",
            "ุงูุญุตูู ุนูู ููุฎุต ุดุงูู",
            "ุฅุถุงูุฉ ุงูุฃุณุฆูุฉ ูุงูููุงุญุธุงุช",
            "ุชุญููู ุงููุญุชูู ูุฎุฑูุทุฉ ุฐูููุฉ",
            "ุฅุฏุฎุงู ุตูุชู ูู ุงูุจูุฏูุงุณุช",
          ],
        },
      ],
    },
    en: {
      brand: "Digital Teacher Platform",
      tagline: "Mastering AI for Education",
      courseTitle: "Course: Mastering AI in Education",
      courseDesc:
        "Six hands-on workshops covering the latest AI applications in education.",
      subscribeTitle: "Subscribe for updates",
      placeholder: "Enter your email",
      subscribe: "Subscribe",
      footer: "Digital Teacher Platform",
      workshops: [
        {
          title: "AI: From Zero to Creativity",
          points: [
            "Design PowerPoint slides in one click",
            "Generate professional images in one click",
            "Convert text to diverse voices",
            "Write a story and turn it into a video",
            "Chat with a PDF and turn it into a story or play",
            "Convert PDF to Word without losing formatting",
          ],
        },
        {
          title: "Fast Educational Automation Tools",
          points: [
            "Create a teaching video from just a lesson title",
            "Build professional exams with a review sheet",
            "Make & share a quiz and see answers & grades in 2 minutes",
            "Talk to a YouTube video and turn it into a play",
            "Convert PDF into a professional PowerPoint",
          ],
        },
        {
          title: "Advanced Creativity & Content Enrichment",
          points: [
            "Turn lessons into mind maps",
            "Create promo or whiteboard-style teaching videos",
            "Generate interactive practice questions",
            "Pro-level large-file translation (not Google Translate)",
            "Create multi-speaker talking-head videos",
          ],
        },
        {
          title: "Subject-Specific Smart Tutor",
          points: [
            "Build a ChatGPT-like tutor for your subject",
            "24/7 Q&A for students about the subject",
            "Train the tutor for accurate answers",
            "Restrict answers to the syllabus only",
            "Personalized interactive experience",
          ],
        },
        {
          title: "Interactive Models that Simulate Reality",
          points: [
            "Introduce the newest tool for interactive models",
            "Create realistic learning environments",
            "Add interactive elements",
            "Deliver a full working sample",
            "Customize models for different topics",
          ],
        },
        {
          title: "Aggregate Knowledge Sources into Experiences",
          points: [
            "Collect all learning sources in one place",
            "Turn content into a video",
            "Create a conversational podcast",
            "Get a comprehensive summary",
            "Add questions and notes",
            "Generate a mind map",
            "Add your voice into the podcast",
          ],
        },
      ],
    },
  };

  const t = dict[lang];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white">
      <header className="max-w-6xl mx-auto px-6 py-6 flex items-center justify-between">
        <div className="flex items-center gap-3">
          <h1 className="text-xl font-bold">{t.brand}</h1>

          {/* ูุญููู ุงููุบุงุช */}
          <div className="flex items-center gap-2">
            <span className="text-sm opacity-80">๐</span>
            <select
              aria-label={lang === "ar" ? "ุงุฎุชุฑ ุงููุบุฉ" : "Choose language"}
              value={lang}
              onChange={(e) => setLang(e.target.value)}
              className="min-w-[140px] rounded-lg bg-white/10 border border-white/40 px-3 py-1 text-sm"
            >
              <option value="ar">ุงูุนุฑุจูุฉ</option>
              <option value="en">English</option>
            </select>
            <button
              type="button"
              onClick={() => setLang((cur) => (cur === "ar" ? "en" : "ar"))}
              className="rounded-lg border border-white/40 bg-white/10 px-3 py-1 text-xs"
              title={lang === "ar" ? "Switch to English" : "ุงูุชุจุฏูู ููุนุฑุจูุฉ"}
            >
              {lang === "ar" ? "EN" : "AR"}
            </button>
          </div>
        </div>
        <span className="text-sm text-white/70">{t.tagline}</span>
      </header>

      <main className="max-w-6xl mx-auto px-6">
        <section className="mb-10">
          <h2 className="text-2xl font-bold mb-4">{t.courseTitle}</h2>
          <p className="text-white/80 mb-8">{t.courseDesc}</p>

          {t.workshops.map((w, idx) => (
            <div key={idx} className="mb-6 p-5 bg-white/5 rounded-2xl border border-white/10">
              <h3 className="text-xl font-semibold mb-3">{w.title}</h3>
              <ul className="list-disc ps-6 space-y-1 text-white/80">
                {w.points.map((p, i) => (<li key={i}>{p}</li>))}
              </ul>
            </div>
          ))}
        </section>

        <section className="bg-white/10 p-6 rounded-2xl border border-white/10">
          <h3 className="text-lg font-semibold mb-3">{t.subscribeTitle}</h3>
          <form
            onSubmit={(e) => {
              e.preventDefault();
              alert(lang === "ar" ? `ุดูุฑุงู! ุณูููู ุจุงูุชูุงุตู ูุนู ุนูู ${email}` : `Thanks! We'll reach you at ${email}`);
              setEmail("");
            }}
            className="flex flex-col sm:flex-row gap-3"
          >
            <input
              className="flex-1 rounded-xl px-4 py-3 text-slate-900"
              placeholder={t.placeholder}
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
            />
            <button className="rounded-xl px-6 py-3 font-bold bg-gradient-to-r from-indigo-600 via-fuchsia-600 to-emerald-500">
              {t.subscribe}
            </button>
          </form>
        </section>
      </main>

      <footer className="max-w-6xl mx-auto px-6 py-6 text-white/60 text-sm">
        <div>ยฉ {new Date().getFullYear()} {t.footer}</div>
      </footer>
    </div>
  );
}
